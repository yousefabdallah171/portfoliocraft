// Common
.hover-tilt {
    transform-style: preserve-3d;
    transform: perspective(500px);
    transition: all var(--pxl-transition-duration) linear, transform 0s !important;
    * {
        transform: translateZ(80px);
    }
}
.hover-3d-cube-flip {
    --pxl-translate-z: 17px;
    position: relative;
    transform-style: preserve-3d;
    transform: rotateX(-90deg) ;
    transition: var(--pxl-transition-duration) linear;
    > a {
        display: block;
        position: relative;
        z-index: 99;
        pointer-events: auto; 
    }
    * {
        opacity: 0;
    }
    &::before, &::after {
        content: attr(data-text);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        text-align: inherit;
        pointer-events: none;
    }
    &::before {
        color: #FFF;
        transform: rotateX(90deg) translateZ(var(--pxl-translate-z));
    }
    &::after {
        color: #D7FF37;
        transform: translateZ(var(--pxl-translate-z));
    }
    &:hover,
    .hover-parent:hover &, 
    .hover-parent.active & {
        transform: rotateX(0deg) ;
    }
}
.hover-fade-in-up {
    &:hover {
        animation: fadeInUp .25s linear forwards;
        -webkit-animation: fadeInUp .25s linear forwards;;
    }
}

// Image
.hover-image-zoom-in {
    --pxl-scale: 1.1;
    overflow: hidden;
    img {
        transition: var(--pxl-transition-duration) linear;
    }
    &:hover {
        img {
            scale: var(--pxl-scale);
        }
    }
}
.hover-image-parallax {
    overflow: hidden;
    img {
        transition: scale .5s linear;
    }
}
.hover-image-distortion-transition {
    position: relative;
    // img {
    //     position: relative;
    //     opacity: 0;
    //     pointer-events: none;
    //     z-index: 1;
    // }
    > a {
        display: block;
        position: relative;
        z-index: 9;
        height: 100%;
        opacity: 0;
    }

    canvas {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
    }
}
.hover-image-distortion-warp {
    position: relative;
    overflow: hidden;
    canvas {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
    }
    > a {
        display: block;
        position: relative;
        z-index: 9;
        height: 100%;
        opacity: 0;
    }
    img {
        opacity: 0;
    }
}
.hover-image-distortion-wave {
    position: relative;
    overflow: hidden;
    canvas {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
    }
    > a {
        display: block;
        position: relative;
        z-index: 9;
        height: 100%;
        opacity: 0;
    }
}

@include keyframes(custom-anim1) {
    0% {
        transform: scaleX(0);
        opacity: 1;
    }75% {
        transform: scaleX(1.2);
        opacity: 0;
    }100% {
        opacity: 0;
    }
}
.hover-image-overlay-fade--x{
    position: relative;
    &::before {
        position: absolute;
        content: '';
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        transform: scaleX(0);
        pointer-events: none;
        background-color: rgba($color: #FFF, $alpha: 0.15);
        transition: .3s;
    }
    &:hover {
        &::before {
            animation: custom-anim1 .75s linear forwards;
            -webkit-animation: custom-anim1 .75s linear forwards;
        }
    }
}

.hover-image-overlay-fade--y{
    position: relative;
    &::before {
        position: absolute;
        content: '';
        left: 0;
        top: 50%;
        width: 100%;
        height: 100%;
        transform: translateY(-50%) scaleX(0);
        pointer-events: none;
        background-color: rgba($color: #FFF, $alpha: 0.15);
        transition: .3s;
    }
    &:hover {
        &::before {
            animation: custom-anim1 .75s linear forwards;
            -webkit-animation: custom-anim1 .75s linear forwards;
        }
    }
}

// Text
.hover-text-default {
    transition: .25s linear;
    > a {
        color: inherit;
        transition: none;
    }
    &:hover, 
    .hover-parent:hover & {
        color: #D7FF37;
    } 
}
.hover-text-underline {
    --pxl-height: 2px;
    transition: .25s linear;
    &:hover, 
    .hover-parent:hover & {
        text-decoration: underline var(--pxl-height) currentColor;
    }
}
.hover-text-fill {
    --link-color: currentcolor;
    --link-color-hover: #555;
    position: relative;
    display: inline-block;
    color: var(--link-color);
    overflow: hidden;
    background: linear-gradient(to right, var(--link-color-hover), var(--link-color-hover) 50%, var(--link-color) 50%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 100%;
    background-position: 100%;
    transition: background-position .5s ease;
    &:hover,
    .hover-parent:hover & {
        background-position: 0 100%;
    }
}
.hover-text-underline--slide-ltr {
    --pxl-height: 1px;
    > span, > a {
        transition: .5s;
        display: inline;
        background-image: linear-gradient(
            transparent calc(100% - var(--pxl-height)),currentcolor 0px
        );
        background-size: 0% 100%;
        background-repeat: no-repeat;
        background-position: left bottom;
    }
    &:hover > a,
    &:hover > span,     
    .hover-parent:hover & > a, 
    .hover-parent:hover & > span {
        background-size: 100% 100%;
    }
}
.hover-text-underline--slide-rtl {
    --pxl-height: 1px;
    > span, > a {
        transition: .5s;
        display: inline;
        background-image: linear-gradient(
            transparent calc(100% - var(--pxl-height)), currentcolor 0px
        );
        background-size: 0% 100%;
        background-repeat: no-repeat;
        background-position: right bottom;
    }
    &:hover > a,
    &:hover > span,     
    .hover-parent:hover & > a, 
    .hover-parent:hover & > span {
        background-size: 100% 100%;
    }
}

// Box
.hover-box-default {
    &:hover {
        background-color: #000;
    }
}
.hover-translate3d-direction {
    $pxl-transition-tf: ease;
    position: relative;
    perspective: 400px;
    overflow: hidden;
    .direction-item {
        transform: translate3d(100%, 0, 0);
        pointer-events: none;
    }
}
.hover-rotate3d-direction {
    $pxl-transition-tf: ease;
    perspective: 400px;
    overflow: hidden;
    .direction-item {
        transform: rotate3d(1,0,0, 90deg);
        pointer-events: none;
        opacity: 0;
        transition: opacity .25s linear;
    }
    &:hover {
        .direction-item {
            opacity: 1;
        }
    }
    // &[data-direction="vertical"] {
    //     .direction-item {
    //         transform: rotate3d(0,1,0, 90deg);
    //     }
    // }
}
.direction-item {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background-color: #000;
}

.hover-spotlight-scale {
    position: relative;
    overflow: hidden;
    .item-spotlight {
        position: absolute;
        width: 25px;
        height: 25px;
        scale: 0;
        left: 0;
        top: 0;
        border-radius: 50%;
        pointer-events: none;
        background-color: #010101;
        z-index: 0;
    }
}

.hover-image-show {
    position: relative;
    overflow: visible;
    .item-image {
        position: absolute;
        background: center center / cover no-repeat;
        width: 100px;
        height: 100%;
        pointer-events: none;
        left: 0;
        top: 0;
        transform-origin: center;
        // img {
        //     object-fit: cover;
        //     width: 100%;
        //     height: 100%;
        // }
    }
}

.hover-underline-ltr {
    position: relative;
    &::after {
        content: '';
        position: absolute;
        width: 0;
        height: 1px;
        left: auto;
        right: 0;
        bottom: 0;
        transition: inherit;
        background-color: currentColor;
    }
    &:hover, &.active,
    .menu-item:hover &,
    .menu-item.active &,
    .current-menu-parent &,
    .current_page_item &,
    .pxl-onepage-active &{
        &::after {
            width: 100%;
            left: 0;
            right: auto;
        }
    }
}

.hover-underline-rtl {
    position: relative;
    &::after {
        content: '';
        position: absolute;
        width: 0;
        height: 1px;
        left: 0;
        right: auto;
        bottom: 0;
        transition: inherit;
        background-color: currentColor;
        
    }
    &:hover, &.active,
    .menu-item:hover &,
    .menu-item.active &,
    .current-menu-parent &,
    .current_page_item &,
    .pxl-onepage-active & {
        &::after {
            width: 100%;
            left: auto;
            right: 0;
        }
    }
}

.hover-underline-expand {
    position: relative;
    &::after {
        content: '';
        position: absolute;
        width: 100%;
        height: 1px;
        left: 50%;
        bottom: 0;
        transform: translateX(-50%) scaleX(0);
        transition: inherit;
        background-color: currentColor;
    }
    &:hover, &.active,
    .menu-item:hover &,
    .menu-item.active &,
    .current-menu-parent &,
    .current_page_item &,
    .pxl-onepage-active & {
        &::after {
            transform: translateX(-50%) scaleX(1);
        }
    }
}

.hover-underline-split {
    position: relative;
    &::before, &::after {
        content: '';
        position: absolute;
        width: 0;
        height: 1px;
        bottom: 0;
        transition: inherit;
        background-color: currentColor;
    }
    &::before {
        left: 0;
    }
    &::after {
        right: 0;
    }
    &:hover, &.active,
    .menu-item:hover &,
    .menu-item.active &,
    .current-menu-parent &,
    .current_page_item &,
    .pxl-onepage-active & {
        &::before, &::after {
            width: 51%;
        }
    }
}

.hover-popup-dot {
    position: relative;
    &::before {
        --pxl-box-size: 8px;
        @extend .pxl-round-box;
        content: '';
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        background-color: currentColor;
        scale: 0;
        transition: inherit;
    }
    &:hover, &.active,
    .menu-item:hover &,
    .menu-item.active &,
    .current-menu-parent &,
    .current_page_item &,
    .pxl-onepage-active & {
        color: var(--link-color-hover);
        padding-left: 14px;
        &::before {
            scale: 1;
        }
    }
}

.hover-box-shadow-underfoot {
    .box-item {
        position: relative;
        --pxl-width: 100%;
        --pxl-height: 30px;
        --pxl-background-color: rgba(0, 0, 0, .25);
        @include transition(opacity .25s linear, transform .25s linear);
        &::after {
            content: '';
            width: var(--pxl-width);
            height: var(--pxl-height);
            border-radius: 50%;
            background-color: var(--pxl-background-color);
            filter: blur(5px);
            position: absolute;
            bottom: 0;
            left: 0;
            transition: opacity .25s linear, transform .25s linear;
            opacity: 0;
        }
    }
    &:hover {
        .box-item {
            transform: translateY(calc(-1 * var(--pxl-height)));
            &::after {
                opacity: 1;
                transform: translateY(calc(5px + var(--pxl-height)));
            }
        }
    }
}

.hover-text-slide-ttb {
    position: relative;
    display: block;
    @include transition(all .25s ease);
    &::after {
        display: inherit;
        content: attr(data-text);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        overflow: hidden;
        height: 0;
        color: red;
    }
    &:hover {
        &::after {
            height: 100%;
        }
    }
}

.hover-scale-fill {
    position: relative;
    // overflow: hidden;
    @include transition(scale .25s linear);
    svg, i {
        position: relative;
        z-index: 9;
    }
    &::before {
        content: '';
        @extend .pxl-absolute-full;
        scale: 0;
        background-color: #fff;
        transition: inherit;
        border-radius: inherit;
    }
    &:hover {
        &::before {
            scale: 1;
        }
    }
}

.hover-scale-outline {
    position: relative;
    @include transition(all .25s linear);
    svg, i {
        position: relative;
        z-index: 9;
    }
    &::before {
        content: '';
        position: absolute;
        inset: 1px;
        scale: 0;
        background-color: #fff;
        transition: inherit;
        border-radius: inherit;
    }
    &:hover {
        color: var(--link-color-hover);
        &::before {
            scale: 1;
        }
    }
}

.hover-image-transition {
    position: relative;
    .canvas {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
    }
    .pxl-image-group {
        display: block;
        img {
            object-fit: cover;        
            &.image-back, &.map {
                position: absolute;
                left: 0;
                top: 0;
                width: 100%;
                height: 100%;
                z-index: -1;
                pointer-events: none;
            }
        }
    }
}

.hover-parallax {
    overflow: hidden;
}

.hover-slide-fill {
    position: relative;
    overflow: hidden;
    &.in-top {
        &::before {
            content: '';
            position: absolute;
            left: 0;
            bottom: 0;
            width: 100%;
            height: 0;
            transition: .25s;
            background-color: #010101;
            border-radius: inherit;
        }
        &:hover {
            color: #FFF;
            &::before {
                height: 100%;
            }
        }
    }
}

// Hover animation 
.hover-animation-flipX {
    &:hover ,
    .hover-parent:hover & {
        > svg, > i {
            animation: flipX .5s linear forwards;
            -webkit-animation:  flipX .5s linear forwards;
        }
    }
}

.hover-animation-flipY {
    &:hover,
    .hover-parent:hover & {
        > svg, > i {
            animation: flipY .5s linear forwards;
            -webkit-animation:  flipY .5s linear forwards;
        }
    }
}

.hover-animation-shrink-expand {
    &:hover,
    .hover-parent:hover & {
        > svg, > i {
            animation: shrink-expand .5s linear forwards;
            -webkit-animation:  shrink-expand .5s linear forwards;
        }
    }
}
.hover-animation-grow-normalize {
    &:hover,
    .hover-parent:hover & {
        > svg, > i {
            animation: grow-normalize .5s linear forwards;
            -webkit-animation:  grow-normalize .5s linear forwards;
        }
    }
}



