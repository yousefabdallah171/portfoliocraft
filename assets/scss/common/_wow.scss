// Grow line
@include keyframes(growWidth) {
    from{
        width: 0;
    }to {
        width: 100%;
    }
}

.anim-grow-width {
    @include animation('grow-width .25s linear both');
}

.growWidth.animated {
    -webkit-animation-name: growWidth;
    animation-name: growWidth;
}

// Bounce 
 @include keyframes (bounce-top) {
    0% {
        -webkit-transform: translateY(-200px);
                transform: translateY(-200px);
        -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
        opacity: 1;
    }
    24% {
        opacity: 1;
    }
    40% {
        -webkit-transform: translateY(-32px);
                transform: translateY(-32px);
        -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
    }
    65% {
        -webkit-transform: translateY(-16px);
                transform: translateY(-16px);
        -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
    }
    82% {
        -webkit-transform: translateY(-8px);
                transform: translateY(-8px);
        -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
    }
    93% {
        -webkit-transform: translateY(-4px);
                transform: translateY(-4px);
        -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in;
    }
    25%, 55%, 75%, 90%, 100% {
        -webkit-transform: translateY(0px);
                transform: translateY(0px);
        -webkit-animation-timing-function: ease-out;
                animation-timing-function: ease-out;
    }
}

.bounce-top.animated {
    -webkit-animation-name: bounce-top;
    animation-name: bounce-top;
}

@include keyframes (rollingBounce) {
    0% {
        transform: translateX(var(--pxl-translate-x)) translateY(var(--pxl-translate-y)) rotate(360deg);
        animation-timing-function: ease-in;
        opacity: 0;
    }
    24% {
        opacity: 1;
    }
    40% {
        transform: translateX(calc(var(--pxl-translate-x) / 6.25)) translateY(var(--pxl-translate-y)) rotate(180deg);
        animation-timing-function: ease-in;
    }
    65% {
        transform: translateX(calc(var(--pxl-translate-x) / 12.5)) translateY(var(--pxl-translate-y)) rotate(100deg);
        animation-timing-function: ease-in;
    }
    82% {
        transform: translateX((var(--pxl-translate-x) / 25)) translateY(var(--pxl-translate-y)) rotate(50deg);
        animation-timing-function: ease-in;
    }
    93% {
        transform: translateX((var(--pxl-translate-x) / 50)) translateY(var(--pxl-translate-y)) rotate(30deg);
        animation-timing-function: ease-in;
    }
    25%, 55%, 75%, 90% {
        transform: translateX(0px) translateY(0);
        animation-timing-function: ease-out;
    }
    100% {
        transform: translateX(0px) translateY(0) rotate(0deg);
        animation-timing-function: ease-out;
    }
}

.rollingBounce.animated {
    -webkit-animation-name: rollingBounce;
    animation-name: rollingBounce;
    animation-duration: 2000ms;
    -webkit-animation-duration: 2000ms;
    &.ttb {
        --pxl-translate-y: -200px;
    }
    &.rtl {
        --pxl-translate-x: 200px;
        // --pxl-translate-y: ;
    }
    &.btt {
        --pxl-translate-y: 200px;
    }
    &.ltr {
        --pxl-translate-x: -200px;
    }
}

// Zoom 
@keyframes zoom {
    from {
        transform: translate(var(--pxl-translate-x), var(--pxl-translate-y)) scale(0);
    }to {
        transform: translate(0, 0) scale(1);
    }
}
.zoomInUp.animated {
    --pxl-translate-x: 0;
    --pxl-translate-y: 100%;
    animation-name: zoom;
    -webkit-animation-name: zoom;
}
.zoomInDown.animated {
    --pxl-translate-x: 0;
    --pxl-translate-y: -100%;
    animation-name: zoom;
    -webkit-animation-name: zoom;
}

.zoomInLeft.animated {
    --pxl-translate-x: 100%;
    --pxl-translate-y: 0;
    animation-name: zoom;
    -webkit-animation-name: zoom;
}

.zoomInRight.animated {
    --pxl-translate-x: -100%;
    --pxl-translate-y: 0;
    animation-name: zoom;
    -webkit-animation-name: zoom;
}

.zoomInUpLeft.animated {
    --pxl-translate-x: 100%;
    --pxl-translate-y: 100%;
    animation-name: zoom;
    -webkit-animation-name: zoom;
}

.zoomInUpRight.animated {
    --pxl-translate-x: -100%;
    --pxl-translate-y: 100%;
    animation-name: zoom;
    -webkit-animation-name: zoom;
}

.zoomInDownLeft.animated {
    --pxl-translate-x: 100%;
    --pxl-translate-y: -100%;
    animation-name: zoom;
    -webkit-animation-name: zoom;
}

.zoomInDownRight.animated {
    --pxl-translate-x: -100%;
    --pxl-translate-y: -100%;
    animation-name: zoom;
    -webkit-animation-name: zoom;
}

// Rolling
@include keyframes(rolling) {
    from {
        transform: translateX(var(--pxl-translate-x)) translateY(var(--pxl-translate-y)) rotate(var(--pxl-rotate));
    } to {
        transform: translateX(0) rotate(0deg);
    }
}
.rollingIn.animated {
    animation-name: rolling;
    -webkit-animation-name: rolling;
}
.rollingInRight.animated {
    --pxl-translate-x: 400%;
    --pxl-rotate: 360deg;
    animation-name: rolling;
    -webkit-animation-name: rolling;
}
.rollingInLeft.animated {
    --pxl-translate-x: -400%;
    --pxl-rotate: -360deg;
    animation-name: rolling;
    -webkit-animation-name: rolling;
}
.rollingInUp.animated {
    --pxl-translate-y: -400%;
    --pxl-rotate: -360deg;
    animation-name: rolling;
    -webkit-animation-name: rolling;
}
.rollingInDown.animated {
    --pxl-translate-y: 400%;
    --pxl-rotate: 360deg;
    animation-name: rolling;
    -webkit-animation-name: rolling;
}

// Reveal 
@keyframes revealIn {
    0% {
        clip-path: inset(100% 100% 100% 100%);
    }
    100% {
        clip-path: inset(0 0 0 0);
    }
}
.revealIn.animated {
    animation-name: revealIn;
    -webkit-animation-name: revealIn;
}
@keyframes revealInRight {
    0% {
        clip-path: inset(0 100% 0 0);
    }
    100% {
        clip-path: inset(0 0 0 0);
    }
}
.revealInRight.animated {
    animation-name: revealInRight;
    -webkit-animation-name: revealInRight;
}

@keyframes revealInLeft {
    0% {
        clip-path: inset(0 0 0 100%);
    }
    100% {
        clip-path: inset(0 0 0 0);
    }
}
.revealInLeft.animated {
    animation-name: revealInLeft;
    -webkit-animation-name: revealInLeft;
}

@keyframes revealInUp {
    0% {
        clip-path: inset(0 0 100% 0);
    }
    100% {
        clip-path: inset(0 0 0 0);
    }
}
.revealInUp.animated {
    animation-name: revealInUp;
    -webkit-animation-name: revealInUp;
}

@keyframes revealInDown {
    0% {
        clip-path: inset(100% 0 0 0);
    }
    100% {
        clip-path: inset(0 0 0 0);
    }
}
.revealInDown.animated {
    animation-name: revealInDown;
    -webkit-animation-name: revealInDown;
}


@keyframes revealInVertical {
    0% {
        clip-path: inset(50% 0 50% 0);
    }
    100% {
        clip-path: inset(0 0 0 0);
    }
}
.revealInVertical.animated {
    animation-name: revealInVertical;
    -webkit-animation-name: revealInVertical;
}

@keyframes revealInHorizontal {
    0% {
        clip-path: inset(0% 50% 0% 50%);
    }
    100% {
        clip-path: inset(0 0 0 0);
    }
}
.revealInHorizontal.animated {
    animation-name: revealInHorizontal;
    -webkit-animation-name: revealInHorizontal;
}

// Reveal Image
@keyframes revealImageIn {
    0% {
        clip-path: inset(100% 100% 100% 100%);
        scale: 0.85;
    }
    100% {
        clip-path: inset(0 0 0 0);
        scale: 1;
    }
}
.revealImageIn.animated {
    animation-name: revealImageIn;
    -webkit-animation-name: revealImageIn;
}
@keyframes revealImageInRight {
    0% {
        clip-path: inset(0 100% 0 0);
        scale: 0.85;
    }
    100% {
        clip-path: inset(0 0 0 0);
        scale: 1;
    }
}
.revealImageInRight.animated {
    animation-name: revealImageInRight;
    -webkit-animation-name: revealImageInRight;
}

@keyframes revealImageInLeft {
    0% {
        clip-path: inset(0 0 0 100%);
        scale: 0.85;
    }
    100% {
        clip-path: inset(0 0 0 0);
        scale: 1;
    }
}
.revealImageInLeft.animated {
    animation-name: revealImageInLeft;
    -webkit-animation-name: revealImageInLeft;
}

@keyframes revealImageInUp {
    0% {
        clip-path: inset(0 0 100% 0);
        scale: 0.85;
    }
    100% {
        clip-path: inset(0 0 0 0);
        scale: 1;
    }
}
.revealImageInUp.animated {
    animation-name: revealImageInUp;
    -webkit-animation-name: revealImageInUp;
}

@keyframes revealImageInDown {
    0% {
        clip-path: inset(100% 0 0 0);
        scale: 0.85;
    }
    100% {
        clip-path: inset(0 0 0 0);
        scale: 1;
    }
}
.revealImageInDown.animated {
    animation-name: revealImageInDown;
    -webkit-animation-name: revealImageInDown;
}

@keyframes revealImageInVertical {
    0% {
        clip-path: inset(50% 0 50% 0);
        scale: 0.85;
    }
    100% {
        clip-path: inset(0 0 0 0);
        scale: 1;
    }
}
.revealImageInVertical.animated {
    animation-name: revealImageInVertical;
    -webkit-animation-name: revealImageInVertical;
}

@keyframes revealImageInHorizontal {
    0% {
        clip-path: inset(0% 50% 0% 50%);
        scale: 0.85;
    }
    100% {
        clip-path: inset(0 0 0 0);
        scale: 1;
    }
}
.revealImageInHorizontal.animated {
    animation-name: revealImageInHorizontal;
    -webkit-animation-name: revealImageInHorizontal;
}

// Slide 
@include keyframes(slide) {
    from {
        transform: translate(var(--pxl-translate-x), var(--pxl-translate-y));
    }to {
        transform: translate(0, 0);
    }
}
.slideUp.animated {
    --pxl-translate-x: 0;
    --pxl-translate-y: -100%;
    animation-name: slide;
    -webkit-animation-name: slide;
}

.slideLeft.animated {
    --pxl-translate-x: -100%;
    --pxl-translate-y: 0;
    animation-name: slide;
    -webkit-animation-name: slide;
}

.slideRight.animated {
    --pxl-translate-x: 100%;
    --pxl-translate-y: 0;
    animation-name: slide;
    -webkit-animation-name: slide;
}

.slideDown.animated {
    --pxl-translate-x: 0;
    --pxl-translate-y: 100%;
    animation-name: slide;
    -webkit-animation-name: slide;
}

